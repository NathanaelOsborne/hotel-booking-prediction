# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j3rxGHXMwVH3gf0JIjN9xC-QueHLyV_3

# **Install Streamlit Library**
"""

import streamlit as st
from hotel_booking_model import HotelBookingModel

st.title("Hotel Booking Cancellation Predictor")
model = HotelBookingModel()

st.sidebar.header('Booking Details')
inputs = {
    'no_of_adults': st.sidebar.number_input('Adults', min_value=0, value=2),
    'no_of_children': st.sidebar.number_input('Children', min_value=0, value=0),
    'no_of_weekend_nights': st.sidebar.number_input('Weekend Nights', min_value=0, value=1),
    'no_of_week_nights': st.sidebar.number_input('Week Nights', min_value=0, value=2),
    'type_of_meal_plan': st.sidebar.selectbox('Meal Plan', ['Room Only','Breakfast','Half Board','Full Board']),
    'required_car_parking_space': st.sidebar.selectbox('Parking Needed', [0,1]),
    'room_type_reserved': st.sidebar.selectbox('Room Type', ['A','B','C','D']),
    'lead_time': st.sidebar.number_input('Lead Time (days)', min_value=0, value=10),
    'arrival_year': st.sidebar.number_input('Arrival Year', min_value=2020, value=2025),
    'arrival_month': st.sidebar.selectbox('Arrival Month', list(range(1, 13))),
    'arrival_date': st.sidebar.number_input('Arrival Date', min_value=1, max_value=31, value=15),
    'market_segment_type': st.sidebar.selectbox('Market Segment', ['Online','Offline','Corporate','Complementary']),
    'repeated_guest': st.sidebar.selectbox('Repeated Guest', [0,1]),
    'no_of_previous_cancellations': st.sidebar.number_input('Previous Cancellations', min_value=0, value=0),
    'no_of_previous_bookings_not_canceled': st.sidebar.number_input('Previous Non-canceled', min_value=0, value=1),
    'avg_price_per_room': st.sidebar.number_input('Avg Price per Room', min_value=0.0, value=100.0),
    'no_of_special_requests': st.sidebar.number_input('Special Requests', min_value=0, value=0)
}

if st.button('Predict Cancellation'):
    result = model.predict(inputs)
    st.subheader(f"Prediction: {result}")

#test case
st.markdown("### Test Cases")
case1 = { 'no_of_adults':1,'no_of_children':0,'no_of_weekend_nights':1,'no_of_week_nights':1,'type_of_meal_plan':'Breakfast','required_car_parking_space':0,'room_type_reserved':'A','lead_time':5,'arrival_year':2025,'arrival_month':5,'arrival_date':10,'market_segment_type':'Online','repeated_guest':0,'no_of_previous_cancellations':0,'no_of_previous_bookings_not_canceled':0,'avg_price_per_room':80.0,'no_of_special_requests':0 }
case2 = { 'no_of_adults':2,'no_of_children':2,'no_of_weekend_nights':2,'no_of_week_nights':4,'type_of_meal_plan':'Full Board','required_car_parking_space':1,'room_type_reserved':'D','lead_time':60,'arrival_year':2025,'arrival_month':8,'arrival_date':20,'market_segment_type':'Corporate','repeated_guest':1,'no_of_previous_cancellations':1,'no_of_previous_bookings_not_canceled':3,'avg_price_per_room':200.0,'no_of_special_requests':2 }
st.write("**Case 1 Prediction:**", model.predict(case1))
st.write("**Case 2 Prediction:**", model.predict(case2))
